apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    chart: {{ printf "%s-%s" .Chart.Name .Chart.Version }}
    release: {{ .Chart.Version }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.image.uid }}
        fsGroup: {{ .Values.image.gid }}
      nodeSelector:
        nodetype: master
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        name: {{ .Chart.Name }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        #command: ["mysqld"]
        command: ["mysqld_safe"]
        args: ["--skip-grant-tables"]
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}
              key: password
        - name: MYSQL_DATABASE
          value: des
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}
              key: admin
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}
              key: adminpass
        ports:
        - containerPort: {{ .Values.service.port }}
          name: {{ .Chart.Name }}
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}
